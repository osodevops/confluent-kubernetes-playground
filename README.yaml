---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: "Confluent for Kubernetes Playground"

# Short description of this project
description: |-
  This repository contains Scenario workflows to deploy and manage Confluent on Kubernetes for various use cases.

  This GitHub repository accompanies the official [Confluent for Kubernetes documentation](https://docs.confluent.io/operator/current/overview.html).

# Canonical GitHub repo
github_repo: osodevops/confluent-kubernetes-playground

# How to use this project
usage: |-
  ### Overview
  The examples found in this repository have been tested against a local minikube.

  ### Prerequisites
  You will need a Kubernetes cluster version 1.16 or newer and kubectl version 1.18 running locally.
    * kubectl
    * [Minikube](https://minikube.sigs.k8s.io/docs/start/)

# Example usage
examples: |-

  All Examples will require the steps mentioned in [GETTING_STARTED.md](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/GETTING_STARTED.md) run prior to deploying the example 

  ### Stable CFK Deployments
    * [Kafka GitOps using ArgoCD](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/argo-cd)    
    * [Basic CFK install with auto generated certificates](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/base-no-auth)
    * [RBAC enabled CFK cluster wth OpenLDAP](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/base-rbac)
    * [Cluster Linking Confluent Platform with Confluent Cloud](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/cp-cc-cluster-linking)
    * [Cluster Linking Kafka](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/cp-cp-cluster-linking)
    * [Kafka Connect GCP Spanner in CFK](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/custom-connect-gcp-connectors)
    * [Kafka Connect SQL Server in CFK](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/custom-connect-sql)
    * [Monitoring Kakfa CFK with JMX Prometheus and Grafana](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/grafana-prometheus)
    * [User provided mTLS for Kafka in CFK](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/external-mtls)
    * [Vault enabled secrets store for Kafka](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/stable/vault-key-value)

  ### Broken / WIP Deployments
    * [Vault PKI integration with dynamic SSL](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/broken/pki-vault--waiting-for-kafka-2.7)
    * [Cloud to Cloud replication using Confluent replicator in CFK](https://github.com/osodevops/confluent-kubernetes-playground/tree/main/broken/replicator)

related:
  - name: "Kafka GitOps Example"
    description: "A Kafka / Confluent GitOps workflow example for multi-env deployments with Flux, Kustomize, Helm and Confluent Operator"
    url: "https://github.com/osodevops/kafka-gitops-examples"
  - name: "Confluent Platform on Azure"
    description: "Terraform Module for deploying best practice HA Confluent Platform on Azure"
    url: "https://github.com/osodevops/terraform-azure-confluent-platform"
  - name: "Run Confluent Platform locally with Vagrant"
    description: "Vagrantfile to start a virtual machine running the confluent platform: Zookeeper, Kafka, Schema registry and Confluent control centre using cp-ansible"
    url: "https://github.com/osodevops/vagrant-confluent-platform"
