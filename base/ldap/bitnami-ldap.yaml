apiVersion: v1
kind: Pod
metadata:
  name: ldap
  labels:
    role: ldap
    app: ldap
spec:
  containers:
    - name: ldap
#      args:
#      - --copy-service
#      - --loglevel=debug
      image: bitnami/openldap:2.6.4
#      command: [ "/bin/bash", "-c", "--" ]
#      args: [ "while true; do sleep 30; done;" ]
      ports:
        - name: ldap
          containerPort: 389
        - name: ldaps
          containerPort: 636
      livenessProbe:
        tcpSocket:
          port: 389
        initialDelaySeconds: 15
        periodSeconds: 20
      env:
        - name: LDAP_ROOT
          value: "dc=test,dc=com"
        - name: LDAP_ADMIN_USERNAME
          value: "mds"
        - name: LDAP_ADMIN_PASSWORD
          value: "Developer!"
        - name: LDAP_CUSTOM_LDIF_DIR
          value: "/ldifs/"
        - name: LDAP_LOGLEVEL
          value: "256"
        - name: LDAP_PORT_NUMBER
          value: "389"
      volumeMounts:
      - mountPath: /ldifs/
        name: customldif
      - mountPath: /var/lib/ldap
        name: ldap-data
      - mountPath: /etc/ldap/slapd.d
        name: ldap-config
  volumes:
    - name: customldif
      configMap:
        defaultMode: 0777
        name: ldap-ldifs
    - name: ldap-data
      emptyDir: {}
    - name: ldap-config
      emptyDir: {}
  restartPolicy: Always
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ldap-ldifs
data:
   00-root.ldif: |-
     # Root creation
     dn: dc=test,dc=com
     dc: test
     objectClass: dcObject
     objectClass: organization
     o: Example, Inc
   01-default-group.ldif: |-
     dn: ou=users,dc=test,dc=com
     ou: users
     objectclass: organizationalUnit
   02-default-user.ldif: |-
     dn: cn=kafka,ou=users,dc=test,dc=com
     objectclass: inetOrgPerson
     cn: kafka
     sn: kafka
     uid: kafka
     userpassword: kafka-secret
---
apiVersion: v1
kind: Service
metadata:
  name: ldap
  labels:
    app: ldap
spec:
  ports:
    - port: 389
      name: ldap
    - port: 636
      name: ldaps
  clusterIP: None
  selector:
    app: ldap



