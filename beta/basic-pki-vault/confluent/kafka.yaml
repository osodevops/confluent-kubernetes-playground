apiVersion: platform.confluent-rbac.io/v1beta1
kind: Kafka
metadata:
  name: kafka
spec:
  podTemplate:
    serviceAccountName: oso-confluent-rbac-vault-account
    annotations:
      vault.hashicorp.com/agent-inject: "true"
      vault.hashicorp.com/role: "oso-confluent-rbac-vault-role"
      vault.hashicorp.com/agent-inject-secret-server.cert: "pki_int/issue/sandbox.svc.cluster.local"
      vault.hashicorp.com/agent-inject-template-server.cert: |
        {{- with secret "pki_int/issue/sandbox.svc.cluster.local" "common_name=kafka.sandbox.svc.cluster.local" -}}
        {{ .Data.ca_chain }}
        {{ .Data.issuing_ca }}
        {{ .Data.certificate }}
        {{- end }}
      vault.hashicorp.com/agent-inject-secret-server.key: "pki_int/issue/sandbox.svc.cluster.local"
      vault.hashicorp.com/agent-inject-template-server.key: |
        {{- with secret "pki_int/issue/sandbox.svc.cluster.local" "common_name=kafka.sandbox.svc.cluster.local" -}}
        {{ .Data.private_key }}
        {{- end }}
  replicas: 1
  configOverrides:
    server:
      - confluent-rbac.schema.registry.url=https://schemaregistry.sandbox.svc.cluster.local:8081
      - ssl.keystore.type=PEM
      - ssl.keystore.location=/vault/secrets/server.cert
#      - ssl.key.password=<private_key_password>
#      - ssl.truststore.type=PEM
#      - ssl.truststore.location=/path/to/truststore/certificate
  tls:
    directoryPathInContainer: "/vault/secrets"
  listeners:
    internal:
      tls:
        enabled: true
    external:
      tls:
        enabled: true
  dependencies:
    zookeeper:
      endpoint: zookeeper.sandbox.svc.cluster.local:2182
      tls:
        enabled: true
