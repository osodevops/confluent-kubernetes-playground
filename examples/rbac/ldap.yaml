apiVersion: v1
kind: Pod
metadata:
  name: ldap
  namespace: sandbox
  labels:
    role: ldap
    app: ldap
spec:
  containers:
    - name: ldap
      args:
      - --copy-service
      - --loglevel=debug
      image: osixia/openldap:1.3.0
      ports:
        - name: ldap
          containerPort: 389
        - name: ldaps
          containerPort: 636
      livenessProbe:
        tcpSocket:
          port: 389
        initialDelaySeconds: 15
        periodSeconds: 20
      env:
        - name: LDAP_ORGANISATION
          value: "Test Inc."
        - name: LDAP_DOMAIN
          value: "test.com"
        - name: LDAP_ADMIN_PASSWORD
          value: "confluentrox"
        - name: LDAP_CONFIG_PASSWORD
          value: "confluentconfigrox"
        - name: LDAP_READONLY_USER
          value: "True"
        - name: LDAP_READONLY_USER_USERNAME
          value: "mds"
        - name: LDAP_READONLY_USER_PASSWORD
          value: "Developer!"
        - name: LDAP_TLS
          value: "False"
      volumeMounts:
      - mountPath: /container/service/slapd/assets/config/bootstrap/ldif/custom
        name: customldif
      - mountPath: /var/lib/ldap
        name: ldap-data
      - mountPath: /etc/ldap/slapd.d
        name: ldap-config
  volumes:
    - name: customldif
      configMap:
        defaultMode: 420
        name: ldap-ldifs
    - name: ldap-data
      emptyDir: {}
    - name: ldap-config
      emptyDir: {}

  restartPolicy: Always
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ldap-ldifs
  namespace: tools
data:
  0_groups.ldif: |-
    dn: ou=groups,dc=test,dc=com
    objectClass: organizationalUnit
    objectClass: top
    ou: groups
  0_users.ldif: |-
    dn: ou=users,dc=test,dc=com
    objectClass: organizationalUnit
    objectClass: top
    ou: users
  1_emmy.ldif: |-
    dn: cn=emmy,ou=users,dc=test,dc=com
    userPassword: emmy-secret
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    description: Interested in action and conservation. If you like it, you should put a Noetherian Ring on it.
    cn: emmy
  1_alice.ldif: |-
    dn: cn=alice,ou=users,dc=test,dc=com
    userPassword: alice-secret
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    description: Alice is great at changing perspectives, but sometimes chases down rabbit holes
    cn: alice
  1_developers.ldif: |-
    dn: cn=developers,ou=groups,dc=test,dc=com
    objectClass: top
    objectClass: groupOfNames
    description: A group of software developers and the apps they are responsible for
    cn: developers
    member: cn=emmy,ou=users,dc=test,dc=com
    member: cn=alice,ou=users,dc=test,dc=com
  1_kafka.ldif: |-
    dn: cn=kafka,ou=users,dc=test,dc=com
    userPassword: kafka-secret
    description: kafka user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: kafka
  1_erp.ldif: |-
    dn: cn=erp,ou=users,dc=test,dc=com
    userPassword: erp-secret
    description: erp user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: erp
  1_sr.ldif: |-
    dn: cn=sr,ou=users,dc=test,dc=com
    userPassword: sr-secret
    description: schema registry user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: sr
  1_c3.ldif: |-
    dn: cn=c3,ou=users,dc=test,dc=com
    userPassword: c3-secret
    description: control center user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: c3
  1_ksql.ldif: |-
    dn: cn=ksql,ou=users,dc=test,dc=com
    userPassword: ksql-secret
    description: ksql user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: ksql
  1_connect.ldif: |-
    dn: cn=connect,ou=users,dc=test,dc=com
    userPassword: connect-secret
    description: connect user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: connect
  1_replicator.ldif: |-
    dn: cn=replicator,ou=users,dc=test,dc=com
    userPassword: replicator-secret
    description: replicator user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: replicator
  1_c3-test.ldif: |-
    dn: cn=testadmin,ou=users,dc=test,dc=com
    userPassword: testadmin
    description: testadmin user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: testadmin
---
apiVersion: v1
kind: Service
metadata:
  name: ldap
  labels:
    app: ldap
  namespace: tools
spec:
  ports:
    - port: 389
      name: ldap
    - port: 636
      name: ldaps
  clusterIP: None
  selector:
    app: ldap



