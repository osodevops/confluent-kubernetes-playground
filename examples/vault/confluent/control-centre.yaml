---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
spec:
  podTemplate:
    serviceAccountName: oso-confluent-vault-account
    annotations:
      vault.hashicorp.com/agent-inject: "true"
      vault.hashicorp.com/role: "oso-confluent-vault-role"
      vault.hashicorp.com/agent-inject-secret-bearer.txt: "oso-confluent/data/client/mds-client-c3"
  configOverrides:
    server:
#      - confluent.controlcenter.connect.connect.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
#      - confluent.controlcenter.ksql.ksqldb.ssl.truststore.location=/mnt/sslcerts/truststore.p12
#      - confluent.controlcenter.ksql.ksqldb.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - confluent.controlcenter.metadata.password=${file:/vault/secrets/bearer.txt:password}
      - confluent.controlcenter.metadata.username=${file:/vault/secrets/bearer.txt:username}
#      - confluent.controlcenter.rest.ssl.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
#      - confluent.controlcenter.rest.ssl.keystore.location=/mnt/sslcerts/keystore.p12
#      - confluent.controlcenter.rest.ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
#      - confluent.controlcenter.rest.ssl.truststore.location=/mnt/sslcerts/truststore.p12
#      - confluent.controlcenter.rest.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
#      - confluent.controlcenter.schema.registry.ssl.truststore.location=/mnt/sslcerts/truststore.p12
#      - confluent.controlcenter.schema.registry.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
#      - confluent.controlcenter.streams.ssl.truststore.location=/mnt/sslcerts/truststore.p12
#      - confluent.controlcenter.streams.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - confluent.metadata.basic.auth.user.info=${file:/vault/secrets/bearer.txt:username}:${file/vault/secrets/bearer.txt:password}
#      - public.key.path=/mnt/secrets/mds-public/mdsPublicKey.pem
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.sandbox.svc.cluster.local:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: mds-client-connect
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.sandbox.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-public
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client-c3
      tls:
        enabled: true
    connect:
      - name: connect
        url:  https://connect.sandbox.svc.cluster.local:8083
        tls:
          enabled: true
    ksqldb:
      - name: ksqldb
        url:  https://ksqldb.sandbox.svc.cluster.local:8088
        tls:
          enabled: true
    schemaRegistry:
      url: https://schemaregistry.sandbox.svc.cluster.local:8081
      tls:
        enabled: true
