apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "confluent-for-kubernetes"
    app.kubernetes.io/name: "confluent-for-kubernetes"
    app.kubernetes.io/instance: "confluent"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/component: "confluent-operator"
  name: confluent-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: confluent
      app.kubernetes.io/name: confluent-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "7778"
        prometheus.io/scrape: "true"
      labels:
        app: "confluent-operator"
        app.kubernetes.io/name: "confluent-operator"
        app.kubernetes.io/instance: "confluent"
        confluent-platform: "true"
        version: "0.174.13"
    spec:
      containers:
        - args:
            - --debug=false
            - --namespaces=confluent
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: NODEIP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: DD_ENTITY_ID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.uid
          image: docker.io/confluentinc/confluent-operator:0.174.13
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: confluent-operator
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      serviceAccount: confluent-for-kubernetes
      serviceAccountName: confluent-for-kubernetes
      terminationGracePeriodSeconds: 30