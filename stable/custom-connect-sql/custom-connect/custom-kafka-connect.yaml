apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
spec:
  replicas: 1
  image:
    application: sandbox-example-connect:latest
    init: confluentinc/confluent-init-container:2.2.0
  tls:
    autoGeneratedCerts: true
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka:8090
      tokenKeyPair:
        secretRef: mds-public
      authentication:
        type: bearer
        bearer:
          secretRef: credential
  configOverrides:
    server:
      - group.id=debezium-cluster
      - offset.storage.replication.factor=3
      - config.storage.replication.factor=3
      - status.storage.replication.factor=3
      - config.storage.topic=_confluent-connect-configs
      - offset.storage.topic=_confluent-connect-offsets
      - status.storage.topic=_confluent-connect-status
# TODO - Need to fix this for new secuirty layer
#      - confluent.topic.security.protocol=SASL_SSL
#      - confluent.topic.sasl.mechanism=OAUTHBEARER
#      - confluent.topic.sasl.login.callback.handler.class=io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      - confluent.topic.ssl.truststore.location=/mnt/sslcerts/truststore.jks
      - confluent.topic.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: connect-cluster
spec:
  clustersScopeByIds:
    connectClusterId: sandbox.connect
  principal:
    name: kafka
    type: user
  role: SystemAdmin

